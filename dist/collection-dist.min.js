function getType(n){return Object.prototype.toString.call(n).slice(8,-1)}function defineProperty(n,t,i,r){var u={enumerable:!0,configurable:!1};getType(i)==="Function"&&(u.get=i);getType(r)==="Function"&&(u.set=r);Object.defineProperty(n,t,u)}var Collection=function(n){function r(n){return t.push(n),this}function u(){return t.length=0,this}function f(n){return t.forEach(n),this}function e(n){if(n<0||n>t.length)throw new Error("Index ("+n+") out of range(0,"+t.length+").");return t[n]}function o(n){return t.join(n||",")}function s(){return t.length}var t=n||[],i={add:r,clear:u,forEach:f,get:e,join:o};return defineProperty(i,"count",s),i};
//# sourceMappingURL=collection-dist.min.js.map